syntax = "proto3";

package proto;

message Timespec64 {
    int64 tv_nsec = 1;
    int64 tv_sec = 2;
}

message AllowedIp {
    oneof address {
        fixed32 ipv4 = 1;
        bytes ipv6 = 2;
    }
    uint32 cidr = 3;
}

message Endpoint {
    oneof address {
        fixed32 ipv4 = 1;
        bytes ipv6 = 2;
    }
    uint32 port = 3;
}

message Peer {
    optional bytes public_key = 1;
    optional bytes preshared_key = 2;

    Endpoint endpoint = 3;

    Timespec64 last_handshake_time = 4;

    uint64 rx_bytes = 5;
    uint64 tx_bytes = 6;
    optional uint32 persistent_keepalive_interval = 7;

    repeated AllowedIp allowed_ips = 8;
}

message Device {
    string name = 1;

    optional bytes public_key = 2;
    optional bytes private_key = 3;

    optional uint32 listen_port = 5;
    optional uint32 fwmark = 4;
    
    repeated Peer peers = 6;
}

message PeerConfiguration {
    bytes public_key = 1;
    optional bytes preshared_key = 2;
    optional Endpoint endpoint = 3;
    optional uint32 persistent_keepalive_interval = 4;
    repeated AllowedIp allowed_ips = 5;
}

message DeviceConfiguration {
    optional uint32 listen_port = 1;
    optional uint32 fwmark = 2;
    repeated PeerConfiguration peers = 3;
}

message EmptyRequest {}
message EmptyResponse {}

message CreateDevice {
    message Request {
        string name = 1;
    }
}

message ConfigureDevice {
    message Request {
        string name = 1;
        DeviceConfiguration config = 2;
    }
}

message GetDevices {
    message Response {
        repeated Device devices = 1;
    }
}

message GetDevice {
    message Request {
        string name = 1;
    }
    message Response {
        Device device = 1;
    }
}

message DeleteDevice {
    message Request {
        string name = 1;
    }
}

message GeneratePrivateKey {
    message Response {
        string key = 1;
    }
}

message GeneratePublicKey {
    message Request {
        string private_key = 1;
    }
    message Response {
        string key = 1;
    }
}

message GeneratePresharedKey {
    message Response {
        string key = 1;
    }
}

service WireGuardService {
    rpc CreateDevice(CreateDevice.Request)
        returns (EmptyResponse);

    rpc ConfigureDevice(ConfigureDevice.Request)
        returns (EmptyResponse);

    rpc GetDevices(EmptyRequest)
        returns (GetDevices.Response);

    rpc GetDevice(GetDevice.Request)
        returns (GetDevice.Response);
    
    rpc DeleteDevice(DeleteDevice.Request)
        returns (EmptyResponse);

    rpc GeneratePrivateKey(EmptyRequest)
        returns (GeneratePrivateKey.Response);

    rpc GeneratePublicKey(GeneratePublicKey.Request)
        returns (GeneratePublicKey.Response);

    rpc GeneratePresharedKey(EmptyRequest)
        returns (GeneratePresharedKey.Response);
}
